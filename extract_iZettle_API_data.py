##### SCRIPT FOR EXTRATING INFO FROM GET purchase  IN IZETTLE API #####

#online compiler: https://www.onlinegdb.com/online_python_compiler#

import json

#file  apidata.txt is generated by cURL, file content must be JSON format.
#how to obtain this file: 
    #step 1: gain access token by writing the code: 
    #step 2: fetch the data with HTTP GET method with supplied access token: 

apiDataFromFile = open("apidata.txt").read()
jsonData = json.loads(apiDataFromFile)

#strucutre data into a nice format
def formatAPIData():
    temp = json.dumps(jsonData, indent = 2)
    newFile = open("formattedData.txt", 'w')
    newFile.write(temp)



def main():
    formatAPIData()
    commonJSONFormat = getCommonJSONFormat()
    filename = "outputFile.txt"                      #name should be a non-exisitng file or empty file
    appendToOutputFile(filename, commonJSONFormat)
    
    
def getCommonJSONFormat():
    dataString = ""
    for purchase in jsonData['purchases']:
        timestamp = purchase['timestamp']
        ##### SCRIPT FOR EXTRATING INFO FROM GET purchase  IN IZETTLE API #####



#online compiler: https://www.onlinegdb.com/online_python_compiler#



import json



#file  apidata.txt is generated by cURL, file content must be JSON format.

#how to obtain this file: 

    #step 1: gain access token by writing the code: 

    #step 2: fetch the data with HTTP GET method with supplied access token: 



apiDataFromFile = open("apidata.txt").read()

jsonData = json.loads(apiDataFromFile)



#strucutre data into a nice format

def formatAPIData():

    temp = json.dumps(jsonData, indent = 2)

    newFile = open("new.txt", 'w')

    newFile.write(temp)







def main():

    formatAPIData()

    commonJSONFormat = getCommonJSONFormat()

    filename = "outputFile.txt"                      #name should be a non-exisitng file or empty file

    appendToOutputFile(filename, commonJSONFormat)

    

    

def getCommonJSONFormat():

    dataString = ""

    for purchase in jsonData['purchases']:

        timestamp = purchase['timestamp']

        amount = purchase['amount']*100     #multiply by 100 since data is in cents/ører 

        currency = purchase['currency']

        

        #valid payment types are CardPayments, CashPayments, payments (see documentation)

        if ('cashPayments' in purchase):

            paymentType = "cash"

        elif ('cardPayemnts' in purchase):

            paymentType = "card"

        elif ('payment' in purchase):
        currency = purchase['currency']
        
        #valid payment types are CardPayments, CashPayments, payments (see documentation)
        if ('cashPayments' in purchase):
            paymentType = "cash"
        elif ('cardPayemnts' in purchase):
            paymentType = "card"
        elif ('payment' in purchase):
            paymentType = "other"
            
        
        dictionary = createDictionary(timestamp, amount, currency, paymentType)
        commonJSONFormat = json.dumps(dictionary, indent=2)         
        dataString += commonJSONFormat
        dataString += "\n"
        
        
    return dataString
        
        
def appendToOutputFile(filename, data):
    outputFile = open(filename, "a")
    outputFile.write(data)
    outputFile.close()
        
def createDictionary(timestamp, amount, currency, paymentType):
    dictionary = {}
    dictionary['timestamp'] = timestamp
    dictionary['amount'] = amount
    dictionary['currency'] = currency
    dictionary['paymentType'] = paymentType
    
    return dictionary
      

      
def testPrinting():
    for purchase in jsonData['purchases']:
        #print(purchase)
        
        #print(purchase['cashPauments'])

        cashPaymentForPurchaseList = purchase['cashPayments']       
        cashPaymentForPurchase = cashPaymentForPurchaseList[0]      #data cashPaymentForPurchase is inside a list with one element
        amount = cashPaymentForPurchase['amount']
        print(amount) #NB, i ører (NOK)
      
        print("\n\n\n")
        
        
        
main()
